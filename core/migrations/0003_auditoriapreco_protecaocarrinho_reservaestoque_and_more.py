# Generated by Django 5.2 on 2025-05-31 04:56

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

def remove_duplicate_avaliacoes(apps, schema_editor):
    """Remove avaliações duplicadas, mantendo apenas a mais recente"""
    AvaliacaoProduto = apps.get_model('core', 'AvaliacaoProduto')
    
    # Encontra todas as combinações duplicadas
    duplicates = AvaliacaoProduto.objects.values('produto_id', 'usuario_id').annotate(
        count=models.Count('id')
    ).filter(count__gt=1)
    
    for duplicate in duplicates:
        # Para cada combinação duplicada, mantém apenas a mais recente
        avaliacoes = AvaliacaoProduto.objects.filter(
            produto_id=duplicate['produto_id'],
            usuario_id=duplicate['usuario_id']
        ).order_by('-criado_em')
        
        # Remove todas exceto a primeira (mais recente)
        avaliacoes_to_delete = avaliacoes[1:]
        for avaliacao in avaliacoes_to_delete:
            avaliacao.delete()

def reverse_remove_duplicates(apps, schema_editor):
    # Não há como reverter a remoção de duplicatas
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0002_produtovariacao_ativo'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        
        migrations.RunPython(
            remove_duplicate_avaliacoes,
            reverse_remove_duplicates,
        ),
        
        migrations.CreateModel(
            name='AuditoriaPreco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preco_antigo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('preco_novo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('variacao_percentual', models.DecimalField(decimal_places=2, max_digits=5)),
                ('data_alteracao', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('motivo', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-data_alteracao'],
            },
        ),
        migrations.CreateModel(
            name='ProtecaoCarrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessao_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True)),
                ('tentativas_manipulacao', models.PositiveIntegerField(default=0)),
                ('bloqueado_ate', models.DateTimeField(blank=True, null=True)),
                ('checksum', models.CharField(db_index=True, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='ReservaEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField()),
                ('sessao_id', models.CharField(db_index=True, max_length=100)),
                ('data_criacao', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('data_expiracao', models.DateTimeField(db_index=True)),
                ('status', models.CharField(choices=[('P', 'Pendente'), ('C', 'Confirmada'), ('E', 'Expirada'), ('L', 'Liberada')], db_index=True, default='P', max_length=20)),
                ('lock_version', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='VerificacaoPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'Pendente'), ('V', 'Verificado'), ('E', 'Erro')], db_index=True, default='P', max_length=20)),
                ('data_verificacao', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('erros', models.JSONField(blank=True, default=dict)),
                ('checksum', models.CharField(db_index=True, max_length=64)),
            ],
        ),
        migrations.AlterModelOptions(
            name='avaliacaoproduto',
            options={'ordering': ['-criado_em']},
        ),
        migrations.AlterModelOptions(
            name='categoria',
            options={'ordering': ['ordem', 'nome']},
        ),
        migrations.AlterModelOptions(
            name='imagemproduto',
            options={'ordering': ['ordem']},
        ),
        migrations.AlterModelOptions(
            name='marca',
            options={'ordering': ['nome']},
        ),
        migrations.AlterModelOptions(
            name='produto',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='atributotipo',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='atributotipo',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='atributovalor',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='atributovalor',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='categoria',
            name='ativo',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AddField(
            model_name='categoria',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='categoria',
            name='ordem',
            field=models.PositiveIntegerField(db_index=True, default=0),
        ),
        migrations.AddField(
            model_name='categoria',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='imagemproduto',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='imagemproduto',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='marca',
            name='ativo',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AddField(
            model_name='marca',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),  # ← Altere aqui
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='marca',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='produtovariacao',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='produtovariacao',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='atributotipo',
            name='ativo',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='atributotipo',
            name='nome',
            field=models.CharField(db_index=True, max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='atributotipo',
            name='obrigatorio',
            field=models.BooleanField(db_index=True, default=False, help_text='Se é obrigatório escolher este atributo'),
        ),
        migrations.AlterField(
            model_name='atributotipo',
            name='ordem',
            field=models.PositiveIntegerField(db_index=True, default=0, help_text='Ordem de exibição'),
        ),
        migrations.AlterField(
            model_name='atributovalor',
            name='ativo',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='atributovalor',
            name='codigo',
            field=models.CharField(blank=True, db_index=True, help_text="Código interno (ex: 'M', 'GG', '#FF0000')", max_length=20),
        ),
        migrations.AlterField(
            model_name='atributovalor',
            name='ordem',
            field=models.PositiveIntegerField(db_index=True, default=0),
        ),
        migrations.AlterField(
            model_name='atributovalor',
            name='valor',
            field=models.CharField(db_index=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='atributovalor',
            name='valor_adicional_preco',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Valor adicional ao preço do produto', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='avaliacaoproduto',
            name='aprovada',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterField(
            model_name='avaliacaoproduto',
            name='criado_em',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='carrinho',
            name='criado_em',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='categoria',
            name='nome',
            field=models.CharField(db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='cupom',
            name='categorias_aplicaveis',
            field=models.ManyToManyField(blank=True, db_index=True, help_text='Categorias onde o cupom é aplicável', to='core.categoria'),
        ),
        migrations.AlterField(
            model_name='cupom',
            name='codigo',
            field=models.CharField(db_index=True, max_length=30, unique=True),
        ),
        migrations.AlterField(
            model_name='cupom',
            name='desconto_percentual',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='cupom',
            name='desconto_valor',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='cupom',
            name='primeira_compra_apenas',
            field=models.BooleanField(db_index=True, default=False, help_text='Válido apenas para primeira compra'),
        ),
        migrations.AlterField(
            model_name='cupom',
            name='produtos_aplicaveis',
            field=models.ManyToManyField(blank=True, db_index=True, help_text='Produtos específicos onde o cupom é aplicável', to='core.produto'),
        ),
        migrations.AlterField(
            model_name='cupom',
            name='tipo',
            field=models.CharField(choices=[('percentual', 'Desconto Percentual'), ('valor_fixo', 'Valor Fixo'), ('frete_gratis', 'Frete Grátis'), ('compre_leve', 'Compre X Leve Y')], db_index=True, default='percentual', max_length=20),
        ),
        migrations.AlterField(
            model_name='cupom',
            name='valor_maximo_desconto',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Valor máximo de desconto a ser aplicado', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='cupom',
            name='valor_minimo_pedido',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Valor mínimo do pedido para usar o cupom', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='bairro',
            field=models.CharField(db_index=True, max_length=100, verbose_name='Bairro'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='cep',
            field=models.CharField(db_index=True, max_length=9, validators=[django.core.validators.RegexValidator(message='CEP deve estar no formato 12345-678', regex='^\\d{5}-\\d{3}$')]),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='cidade',
            field=models.CharField(db_index=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='estado',
            field=models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], db_index=True, max_length=2, verbose_name='UF'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='nome_completo',
            field=models.CharField(db_index=True, max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Nome Completo'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='principal',
            field=models.BooleanField(db_index=True, default=False, verbose_name='Endereço Principal'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='rua',
            field=models.CharField(db_index=True, max_length=200, verbose_name='Logradouro'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='telefone',
            field=models.CharField(db_index=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato (99) 99999-9999', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')]),
        ),
        migrations.AlterField(
            model_name='imagemproduto',
            name='destaque',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterField(
            model_name='imagemproduto',
            name='ordem',
            field=models.PositiveIntegerField(db_index=True, default=0),
        ),
        migrations.AlterField(
            model_name='itemcarrinho',
            name='quantidade',
            field=models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='itempedido',
            name='preco_unitario',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='itemwishlist',
            name='adicionado_em',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='logestoque',
            name='data',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='marca',
            name='nome',
            field=models.CharField(db_index=True, max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='notification',
            name='timestamp',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='notification',
            name='unread',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='notification',
            name='verb',
            field=models.CharField(db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='pedido',
            name='codigo',
            field=models.CharField(db_index=True, editable=False, max_length=10, unique=True, verbose_name='Código do Pedido'),
        ),
        migrations.AlterField(
            model_name='pedido',
            name='codigo_rastreamento',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='Código de Rastreio'),
        ),
        migrations.AlterField(
            model_name='pedido',
            name='frete_id',
            field=models.CharField(blank=True, db_index=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='pedido',
            name='frete_valor',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='pedido',
            name='melhor_envio_id',
            field=models.CharField(blank=True, db_index=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='pedido',
            name='metodo_pagamento',
            field=models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Método de Pagamento'),
        ),
        migrations.AlterField(
            model_name='pedido',
            name='payment_intent_id',
            field=models.CharField(blank=True, db_index=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='pedido',
            name='total',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='produto',
            name='codigo_barras',
            field=models.CharField(blank=True, db_index=True, help_text='Código de barras', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='produto',
            name='cuidados',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='produto',
            name='genero',
            field=models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('U', 'Unissex')], db_index=True, default='M', max_length=20),
        ),
        migrations.AlterField(
            model_name='produto',
            name='peso',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Peso do produto em kg', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='produto',
            name='sku',
            field=models.CharField(blank=True, db_index=True, help_text='SKU do produto', max_length=50, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='produto',
            name='temporada',
            field=models.CharField(blank=True, choices=[('verao', 'Verão'), ('inverno', 'Inverno'), ('meia_estacao', 'Meia Estação'), ('todo_ano', 'Todo Ano')], db_index=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='produtovariacao',
            name='atributos',
            field=models.ManyToManyField(db_index=True, related_name='variacoes', to='core.atributovalor'),
        ),
        migrations.AlterField(
            model_name='produtovariacao',
            name='peso',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Peso da variação em kg', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='produtovariacao',
            name='preco_adicional',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Preço adicional da variação', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='reembolso',
            name='data_criacao',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='reembolso',
            name='status',
            field=models.CharField(choices=[('P', 'Pendente'), ('A', 'Aprovado'), ('R', 'Rejeitado'), ('C', 'Concluído')], db_index=True, default='P', max_length=2),
        ),
        migrations.AlterField(
            model_name='reembolso',
            name='valor',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='criado_em',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='nome',
            field=models.CharField(db_index=True, default='Minha Lista', max_length=100),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='publica',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterUniqueTogether(
            name='avaliacaoproduto',
            unique_together={('produto', 'usuario')},
        ),
        migrations.AddIndex(
            model_name='atributotipo',
            index=models.Index(fields=['nome', 'ativo'], name='core_atribu_nome_869b74_idx'),
        ),
        migrations.AddIndex(
            model_name='atributotipo',
            index=models.Index(fields=['tipo', 'ativo'], name='core_atribu_tipo_e1c470_idx'),
        ),
        migrations.AddIndex(
            model_name='atributovalor',
            index=models.Index(fields=['tipo', 'valor', 'ativo'], name='core_atribu_tipo_id_5cd7a2_idx'),
        ),
        migrations.AddIndex(
            model_name='atributovalor',
            index=models.Index(fields=['codigo', 'ativo'], name='core_atribu_codigo_6a2992_idx'),
        ),
        migrations.AddIndex(
            model_name='avaliacaoproduto',
            index=models.Index(fields=['produto', 'aprovada'], name='core_avalia_produto_8804fd_idx'),
        ),
        migrations.AddIndex(
            model_name='avaliacaoproduto',
            index=models.Index(fields=['usuario', 'aprovada'], name='core_avalia_usuario_c90a62_idx'),
        ),
        migrations.AddIndex(
            model_name='carrinho',
            index=models.Index(fields=['usuario', 'criado_em'], name='core_carrin_usuario_b33240_idx'),
        ),
        migrations.AddIndex(
            model_name='categoria',
            index=models.Index(fields=['nome', 'ativo'], name='core_catego_nome_902094_idx'),
        ),
        migrations.AddIndex(
            model_name='categoria',
            index=models.Index(fields=['categoria_pai', 'ativo'], name='core_catego_categor_69233d_idx'),
        ),
        migrations.AddIndex(
            model_name='cupom',
            index=models.Index(fields=['codigo', 'ativo'], name='core_cupom_codigo_e6dddb_idx'),
        ),
        migrations.AddIndex(
            model_name='cupom',
            index=models.Index(fields=['tipo', 'ativo'], name='core_cupom_tipo_000026_idx'),
        ),
        migrations.AddIndex(
            model_name='cupom',
            index=models.Index(fields=['validade_fim', 'ativo'], name='core_cupom_validad_2db619_idx'),
        ),
        migrations.AddIndex(
            model_name='endereco',
            index=models.Index(fields=['usuario', 'principal'], name='core_endere_usuario_14a202_idx'),
        ),
        migrations.AddIndex(
            model_name='endereco',
            index=models.Index(fields=['cep', 'numero'], name='core_endere_cep_194881_idx'),
        ),
        migrations.AddIndex(
            model_name='endereco',
            index=models.Index(fields=['cidade', 'estado'], name='core_endere_cidade_3864aa_idx'),
        ),
        migrations.AddIndex(
            model_name='imagemproduto',
            index=models.Index(fields=['produto', 'destaque'], name='core_imagem_produto_9270d1_idx'),
        ),
        migrations.AddIndex(
            model_name='itemcarrinho',
            index=models.Index(fields=['carrinho', 'produto'], name='core_itemca_carrinh_467475_idx'),
        ),
        migrations.AddIndex(
            model_name='itemcarrinho',
            index=models.Index(fields=['produto', 'variacao'], name='core_itemca_produto_7d4bf1_idx'),
        ),
        migrations.AddIndex(
            model_name='itempedido',
            index=models.Index(fields=['pedido', 'produto'], name='core_itempe_pedido__e0edb3_idx'),
        ),
        migrations.AddIndex(
            model_name='itempedido',
            index=models.Index(fields=['produto', 'variacao'], name='core_itempe_produto_bf6bca_idx'),
        ),
        migrations.AddIndex(
            model_name='itemwishlist',
            index=models.Index(fields=['wishlist', 'produto'], name='core_itemwi_wishlis_428a2d_idx'),
        ),
        migrations.AddIndex(
            model_name='itemwishlist',
            index=models.Index(fields=['produto', 'variacao'], name='core_itemwi_produto_f022d0_idx'),
        ),
        migrations.AddIndex(
            model_name='logestoque',
            index=models.Index(fields=['variacao', 'data'], name='core_logest_variaca_217ae3_idx'),
        ),
        migrations.AddIndex(
            model_name='logestoque',
            index=models.Index(fields=['pedido', 'data'], name='core_logest_pedido__ba8898_idx'),
        ),
        migrations.AddIndex(
            model_name='logestoque',
            index=models.Index(fields=['usuario', 'data'], name='core_logest_usuario_305615_idx'),
        ),
        migrations.AddIndex(
            model_name='marca',
            index=models.Index(fields=['nome', 'ativo'], name='core_marca_nome_784a3b_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'unread'], name='core_notifi_recipie_3dcb0e_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['timestamp', 'unread'], name='core_notifi_timesta_3150ee_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['usuario', 'status'], name='core_pedido_usuario_02743e_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['data_criacao', 'status'], name='core_pedido_data_cr_6aacb4_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['codigo', 'status'], name='core_pedido_codigo_335872_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['nome', 'ativo'], name='core_produt_nome_f03785_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['categoria', 'ativo'], name='core_produt_categor_da8b0a_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['marca', 'ativo'], name='core_produt_marca_i_b5e8d5_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['preco', 'ativo'], name='core_produt_preco_cb3840_idx'),
        ),
        migrations.AddIndex(
            model_name='produto',
            index=models.Index(fields=['destaque', 'ativo'], name='core_produt_destaqu_e77c45_idx'),
        ),
        migrations.AddIndex(
            model_name='produtovariacao',
            index=models.Index(fields=['produto', 'ativo'], name='core_produt_produto_adcd33_idx'),
        ),
        migrations.AddIndex(
            model_name='produtovariacao',
            index=models.Index(fields=['estoque', 'ativo'], name='core_produt_estoque_34ec81_idx'),
        ),
        migrations.AddIndex(
            model_name='produtovariacao',
            index=models.Index(fields=['sku', 'ativo'], name='core_produt_sku_4a0542_idx'),
        ),
        migrations.AddIndex(
            model_name='reembolso',
            index=models.Index(fields=['pedido', 'status'], name='core_reembo_pedido__3792b7_idx'),
        ),
        migrations.AddIndex(
            model_name='reembolso',
            index=models.Index(fields=['data_criacao', 'status'], name='core_reembo_data_cr_399723_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['usuario', 'publica'], name='core_wishli_usuario_4a8271_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['criado_em'], name='core_wishli_criado__8aa582_idx'),
        ),
        migrations.AddField(
            model_name='auditoriapreco',
            name='produto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auditoria_precos', to='core.produto'),
        ),
        migrations.AddField(
            model_name='auditoriapreco',
            name='usuario',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alteracoes_preco', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='protecaocarrinho',
            name='usuario',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='protecoes_carrinho', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reservaestoque',
            name='pedido',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservas_estoque', to='core.pedido'),
        ),
        migrations.AddField(
            model_name='reservaestoque',
            name='variacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='core.produtovariacao'),
        ),
        migrations.AddField(
            model_name='verificacaopedido',
            name='pedido',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verificacao', to='core.pedido'),
        ),
        migrations.AddIndex(
            model_name='auditoriapreco',
            index=models.Index(fields=['produto', 'data_alteracao'], name='core_audito_produto_9ed407_idx'),
        ),
        migrations.AddIndex(
            model_name='auditoriapreco',
            index=models.Index(fields=['variacao_percentual'], name='core_audito_variaca_7ee39f_idx'),
        ),
        migrations.AddIndex(
            model_name='protecaocarrinho',
            index=models.Index(fields=['sessao_id', 'bloqueado_ate'], name='core_protec_sessao__404e74_idx'),
        ),
        migrations.AddIndex(
            model_name='protecaocarrinho',
            index=models.Index(fields=['usuario', 'bloqueado_ate'], name='core_protec_usuario_2346f9_idx'),
        ),
        migrations.AddIndex(
            model_name='reservaestoque',
            index=models.Index(fields=['variacao', 'status'], name='core_reserv_variaca_0bb4b5_idx'),
        ),
        migrations.AddIndex(
            model_name='reservaestoque',
            index=models.Index(fields=['sessao_id', 'status'], name='core_reserv_sessao__482c5a_idx'),
        ),
        migrations.AddIndex(
            model_name='reservaestoque',
            index=models.Index(fields=['data_expiracao', 'status'], name='core_reserv_data_ex_d3be04_idx'),
        ),
        migrations.AddIndex(
            model_name='reservaestoque',
            index=models.Index(fields=['variacao', 'sessao_id', 'status'], name='core_reserv_variaca_d80ad7_idx'),
        ),
        migrations.AddConstraint(
            model_name='reservaestoque',
            constraint=models.CheckConstraint(condition=models.Q(('quantidade__gt', 0)), name='quantidade_positiva'),
        ),
        migrations.AddIndex(
            model_name='verificacaopedido',
            index=models.Index(fields=['status', 'data_verificacao'], name='core_verifi_status_da31fd_idx'),
        ),
    ]
