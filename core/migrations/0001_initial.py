# Generated by Django 5.2 on 2025-05-28 02:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AtributoTipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('tipo', models.CharField(choices=[('select', 'Seleção Única'), ('color', 'Cor'), ('size', 'Tamanho'), ('text', 'Texto Livre')], max_length=20)),
                ('obrigatorio', models.BooleanField(default=False, help_text='Se é obrigatório escolher este atributo')),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição')),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tipo de Atributo',
                'verbose_name_plural': 'Tipos de Atributos',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='marcas/')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('cor', models.CharField(default='#007bff', help_text='Cor da tag em hexadecimal', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='AtributoValor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.CharField(max_length=100)),
                ('codigo', models.CharField(blank=True, help_text="Código interno (ex: 'M', 'GG', '#FF0000')", max_length=20)),
                ('ordem', models.PositiveIntegerField(default=0)),
                ('ativo', models.BooleanField(default=True)),
                ('valor_adicional_preco', models.DecimalField(decimal_places=2, default=0, help_text='Valor adicional ao preço do produto', max_digits=10)),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valores', to='core.atributotipo')),
            ],
            options={
                'verbose_name': 'Valor de Atributo',
                'verbose_name_plural': 'Valores de Atributos',
                'ordering': ['tipo', 'ordem', 'valor'],
                'unique_together': {('tipo', 'valor')},
            },
        ),
        migrations.CreateModel(
            name='Carrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='carrinho', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('categoria_pai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategorias', to='core.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='Cupom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30, unique=True)),
                ('descricao', models.CharField(blank=True, max_length=255)),
                ('tipo', models.CharField(choices=[('percentual', 'Desconto Percentual'), ('valor_fixo', 'Valor Fixo'), ('frete_gratis', 'Frete Grátis'), ('compre_leve', 'Compre X Leve Y')], default='percentual', max_length=20)),
                ('desconto_percentual', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('desconto_valor', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ativo', models.BooleanField(db_index=True, default=True)),
                ('validade_inicio', models.DateTimeField(blank=True, help_text='Data de início da validade', null=True)),
                ('validade_fim', models.DateTimeField(blank=True, db_index=True, help_text='Data de fim da validade', null=True)),
                ('uso_unico', models.BooleanField(default=False, help_text='Permite apenas um uso por usuário')),
                ('max_usos', models.PositiveIntegerField(blank=True, help_text='Número máximo de usos totais', null=True)),
                ('usos', models.PositiveIntegerField(default=0, help_text='Quantas vezes foi usado')),
                ('valor_minimo_pedido', models.DecimalField(blank=True, decimal_places=2, help_text='Valor mínimo do pedido para usar o cupom', max_digits=10, null=True)),
                ('valor_maximo_desconto', models.DecimalField(blank=True, decimal_places=2, help_text='Valor máximo de desconto a ser aplicado', max_digits=10, null=True)),
                ('primeira_compra_apenas', models.BooleanField(default=False, help_text='Válido apenas para primeira compra')),
                ('aplicar_apenas_itens_elegiveis', models.BooleanField(default=False, help_text='Se True, aplica desconto apenas aos itens elegíveis. Se False, aplica ao total do pedido')),
                ('quantidade_comprar', models.PositiveIntegerField(blank=True, help_text='Quantidade para comprar (tipo compre_leve)', null=True)),
                ('quantidade_levar', models.PositiveIntegerField(blank=True, help_text='Quantidade para levar grátis (tipo compre_leve)', null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('categorias_aplicaveis', models.ManyToManyField(blank=True, help_text='Categorias onde o cupom é aplicável', to='core.categoria')),
                ('usuario', models.ForeignKey(blank=True, help_text='Cupom exclusivo para um usuário', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cupom',
                'verbose_name_plural': 'Cupons',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Nome Completo')),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato (99) 99999-9999', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')])),
                ('rua', models.CharField(max_length=200, verbose_name='Logradouro')),
                ('numero', models.CharField(max_length=20, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cep', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='CEP deve estar no formato 12345-678', regex='^\\d{5}-\\d{3}$')])),
                ('cidade', models.CharField(max_length=100)),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='UF')),
                ('pais', models.CharField(default='Brasil', max_length=50)),
                ('principal', models.BooleanField(default=False, verbose_name='Endereço Principal')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enderecos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Endereço',
                'verbose_name_plural': 'Endereços',
                'ordering': ['-principal', '-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='LogAcao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(max_length=100)),
                ('detalhes', models.TextField(blank=True)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verb', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('unread', models.BooleanField(default=True)),
                ('target_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('actor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actor_notifications', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('target_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(editable=False, max_length=10, unique=True, verbose_name='Código do Pedido')),
                ('status', models.CharField(choices=[('P', 'Pendente'), ('PA', 'Pagamento Aprovado'), ('E', 'Enviado'), ('T', 'Em Transporte'), ('C', 'Concluído'), ('X', 'Cancelado'), ('D', 'Devolvido')], db_index=True, default='P', max_length=2)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('frete_valor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('codigo_rastreamento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Código de Rastreio')),
                ('metodo_pagamento', models.CharField(blank=True, max_length=50, null=True, verbose_name='Método de Pagamento')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('payment_intent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('frete_id', models.CharField(blank=True, max_length=50, null=True)),
                ('melhor_envio_id', models.CharField(blank=True, max_length=255, null=True)),
                ('cupom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cupom')),
                ('endereco_entrega', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.endereco')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pedidos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='LogStatusPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_antigo', models.CharField(max_length=2)),
                ('status_novo', models.CharField(max_length=2)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('notas', models.TextField(blank=True, help_text='Observações sobre a mudança de status')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_status', to='core.pedido')),
            ],
            options={
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visivel', models.BooleanField(db_index=True, default=True)),
                ('nome', models.CharField(db_index=True, max_length=255)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('preco_original', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('desconto', models.IntegerField(blank=True, null=True)),
                ('peso', models.DecimalField(blank=True, decimal_places=3, help_text='Peso do produto em kg', max_digits=6, null=True)),
                ('width', models.PositiveIntegerField(blank=True, help_text='Largura em cm', null=True)),
                ('height', models.PositiveIntegerField(blank=True, help_text='Altura em cm', null=True)),
                ('length', models.PositiveIntegerField(blank=True, help_text='Comprimento em cm', null=True)),
                ('imagem', models.ImageField(default='produtos/default.jpg', upload_to='produtos/')),
                ('sku', models.CharField(blank=True, help_text='SKU do produto', max_length=50, null=True, unique=True)),
                ('codigo_barras', models.CharField(blank=True, help_text='Código de barras', max_length=50, null=True)),
                ('seo_title', models.CharField(blank=True, max_length=70, null=True)),
                ('seo_description', models.CharField(blank=True, max_length=160, null=True)),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('U', 'Unissex')], default='M', max_length=20)),
                ('temporada', models.CharField(blank=True, choices=[('verao', 'Verão'), ('inverno', 'Inverno'), ('meia_estacao', 'Meia Estação'), ('todo_ano', 'Todo Ano')], max_length=20)),
                ('cuidados', models.TextField(blank=True, help_text='Instruções de lavagem e cuidados')),
                ('origem', models.CharField(default='Brasil', max_length=50)),
                ('ativo', models.BooleanField(db_index=True, default=True)),
                ('destaque', models.BooleanField(db_index=True, default=False)),
                ('preco_promocional', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('promocao_inicio', models.DateTimeField(blank=True, null=True)),
                ('promocao_fim', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produtos', to='core.categoria')),
                ('marca', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='produtos', to='core.marca')),
                ('tags', models.ManyToManyField(blank=True, related_name='produtos', to='core.tag')),
            ],
        ),
        migrations.CreateModel(
            name='ImagemProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='produtos/galeria/')),
                ('destaque', models.BooleanField(default=False)),
                ('ordem', models.PositiveIntegerField(default=0)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagens', to='core.produto')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricoPreco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_precos', to='core.produto')),
            ],
            options={
                'ordering': ['-data'],
            },
        ),
        migrations.AddField(
            model_name='cupom',
            name='produtos_aplicaveis',
            field=models.ManyToManyField(blank=True, help_text='Produtos específicos onde o cupom é aplicável', to='core.produto'),
        ),
        migrations.CreateModel(
            name='AvaliacaoProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.PositiveSmallIntegerField()),
                ('comentario', models.TextField(blank=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('aprovada', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='core.produto')),
            ],
        ),
        migrations.CreateModel(
            name='ProdutoVariacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True)),
                ('estoque', models.PositiveIntegerField(db_index=True, default=0)),
                ('preco_adicional', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('peso', models.DecimalField(blank=True, decimal_places=3, help_text='Peso da variação em kg', max_digits=6, null=True)),
                ('width', models.PositiveIntegerField(blank=True, help_text='Largura em cm', null=True)),
                ('height', models.PositiveIntegerField(blank=True, help_text='Altura em cm', null=True)),
                ('length', models.PositiveIntegerField(blank=True, help_text='Comprimento em cm', null=True)),
                ('atributos_hash', models.CharField(db_index=True, editable=False, max_length=128)),
                ('preco_promocional', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('promocao_inicio', models.DateTimeField(blank=True, null=True)),
                ('promocao_fim', models.DateTimeField(blank=True, null=True)),
                ('atributos', models.ManyToManyField(related_name='variacoes', to='core.atributovalor')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variacoes', to='core.produto')),
            ],
            options={
                'verbose_name': 'Variação de Produto',
                'verbose_name_plural': 'Variações de Produtos',
            },
        ),
        migrations.CreateModel(
            name='LogEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField()),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('motivo', models.CharField(blank=True, max_length=100)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('pedido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pedido')),
                ('variacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_estoque', to='core.produtovariacao')),
            ],
            options={
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='ItemPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1)),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.pedido')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto')),
                ('variacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.produtovariacao')),
            ],
        ),
        migrations.CreateModel(
            name='ItemCarrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1)),
                ('carrinho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.carrinho')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto')),
                ('variacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.produtovariacao')),
            ],
        ),
        migrations.CreateModel(
            name='Reembolso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_processamento', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('P', 'Pendente'), ('A', 'Aprovado'), ('R', 'Rejeitado'), ('C', 'Concluído')], default='P', max_length=2)),
                ('motivo', models.TextField(blank=True)),
                ('notas', models.TextField(blank=True)),
                ('pedido', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reembolso', to='core.pedido')),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(default='Minha Lista', max_length=100)),
                ('publica', models.BooleanField(default=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ItemWishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adicionado_em', models.DateTimeField(auto_now_add=True)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto')),
                ('variacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.produtovariacao')),
                ('wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.wishlist')),
            ],
        ),
        migrations.AddConstraint(
            model_name='produtovariacao',
            constraint=models.UniqueConstraint(fields=('produto', 'atributos_hash'), name='unique_produto_atributos'),
        ),
        migrations.AlterUniqueTogether(
            name='itemcarrinho',
            unique_together={('carrinho', 'produto', 'variacao')},
        ),
        migrations.AlterUniqueTogether(
            name='wishlist',
            unique_together={('usuario', 'nome')},
        ),
        migrations.AlterUniqueTogether(
            name='itemwishlist',
            unique_together={('wishlist', 'produto', 'variacao')},
        ),
    ]
